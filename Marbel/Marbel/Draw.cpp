#include "Start.h"
#include "Player.h"
#include <stdlib.h>

extern Player player[4];

//유나 주사위
Dice GameDice(int i) {
	Sleep(500);
	Dice d;
	gotoxy(48, 22);
	printf("                                     ");
	gotoxytext(48, 20, "주사위를 돌려주세요  ☞ Enter ☜");

	srand(time(NULL));
	while (1) {
		Sleep(100);
		//주사위 1부터 6까지 랜덤
		d.dice1 = rand() % 6 + 1;
		d.dice2 = rand() % 6 + 1;
		d.sum = d.dice1 + d.dice2;
		DiceShape(d.dice1);
		DiceShape2(d.dice2);
		// 주사위 모양이 돌아가는데 키를 누르면 멈춤
		if (kbhit()) {
			getch();
			sndPlaySoundA("..\\sound\\DiceItem00000_Swing.wav", SND_ASYNC | SND_NODEFAULT);
			break;
		}
	}
	//d.dice1 = 4;// rand() % 6 + 1;
	//d.dice2 = 2;// rand() % 6 + 1;
	//d.sum = d.dice1 + d.dice2;
	if (d.dice1 == d.dice2) {
		sndPlaySoundA("..\\sound\\Double_A01.wav", SND_ASYNC | SND_NODEFAULT);
		d.equal = 1;
	}
	gotoxy(48, 22);
	printf("주사위의 값은 %d 입니다", d.sum);
	Sleep(500);
	gotoxy(48, 20);
	printf("                                     ");
	return d;
}

//유나
//주사위 더블
void DoubleDice() {
	gotoxy(48, 24);
	printf("더블입니다 한번 더 돌려주세요!");
	Sleep(500);
	gotoxy(48, 24);
	printf("                                  ");
}

//유나
//주사위 디자인
void DiceShape(int dice) {

	if (dice == 1) {
		gotoxy(45, 12); printf("  ┏━━━━━┓");
		gotoxy(45, 13); printf("  ┃          ┃");
		gotoxy(45, 14); printf("  ┃          ┃");
		gotoxy(45, 15); printf("  ┃    ●    ┃");
		gotoxy(45, 16); printf("  ┃          ┃");
		gotoxy(45, 17); printf("  ┃          ┃");
		gotoxy(45, 18); printf("  ┗━━━━━┛");
	}
	if (dice == 2) {
		gotoxy(45, 12); printf("  ┏━━━━━┓");
		gotoxy(45, 13); printf("  ┃          ┃");
		gotoxy(45, 14); printf("  ┃    ●    ┃");
		gotoxy(45, 15); printf("  ┃          ┃");
		gotoxy(45, 16); printf("  ┃    ●    ┃");
		gotoxy(45, 17); printf("  ┃          ┃");
		gotoxy(45, 18); printf("  ┗━━━━━┛");
	}
	if (dice == 3) {
		gotoxy(45, 12); printf("  ┏━━━━━┓");
		gotoxy(45, 13); printf("  ┃          ┃");
		gotoxy(45, 14); printf("  ┃    ●    ┃");
		gotoxy(45, 15); printf("  ┃          ┃");
		gotoxy(45, 16); printf("  ┃ ●    ● ┃");
		gotoxy(45, 17); printf("  ┃          ┃");
		gotoxy(45, 18); printf("  ┗━━━━━┛");
	}
	if (dice == 4) {
		gotoxy(45, 12); printf("  ┏━━━━━┓");
		gotoxy(45, 13); printf("  ┃          ┃");
		gotoxy(45, 14); printf("  ┃ ●    ● ┃");
		gotoxy(45, 15); printf("  ┃          ┃");
		gotoxy(45, 16); printf("  ┃ ●    ● ┃");
		gotoxy(45, 17); printf("  ┃          ┃");
		gotoxy(45, 18); printf("  ┗━━━━━┛");
	}
	if (dice == 5) {
		gotoxy(45, 12); printf("  ┏━━━━━┓");
		gotoxy(45, 13); printf("  ┃          ┃");
		gotoxy(45, 14); printf("  ┃ ●    ● ┃");
		gotoxy(45, 15); printf("  ┃    ●    ┃");
		gotoxy(45, 16); printf("  ┃ ●    ● ┃");
		gotoxy(45, 17); printf("  ┃          ┃");
		gotoxy(45, 18); printf("  ┗━━━━━┛");
	}
	if (dice == 6) {
		gotoxy(45, 12); printf("  ┏━━━━━┓");
		gotoxy(45, 13); printf("  ┃          ┃");
		gotoxy(45, 14); printf("  ┃ ●    ● ┃");
		gotoxy(45, 15); printf("  ┃ ●    ● ┃");
		gotoxy(45, 16); printf("  ┃ ●    ● ┃");
		gotoxy(45, 17); printf("  ┃          ┃");
		gotoxy(45, 18); printf("  ┗━━━━━┛");
	}
}

void DiceShape2(int dice2) {

	if (dice2 == 1) {
		gotoxy(65, 12); printf("  ┏━━━━━┓");
		gotoxy(65, 13); printf("  ┃          ┃");
		gotoxy(65, 14); printf("  ┃          ┃");
		gotoxy(65, 15); printf("  ┃    ●    ┃");
		gotoxy(65, 16); printf("  ┃          ┃");
		gotoxy(65, 17); printf("  ┃          ┃");
		gotoxy(65, 18); printf("  ┗━━━━━┛");
	}
	if (dice2 == 2) {
		gotoxy(65, 12); printf("  ┏━━━━━┓");
		gotoxy(65, 13); printf("  ┃          ┃");
		gotoxy(65, 14); printf("  ┃    ●    ┃");
		gotoxy(65, 15); printf("  ┃          ┃");
		gotoxy(65, 16); printf("  ┃    ●    ┃");
		gotoxy(65, 17); printf("  ┃          ┃");
		gotoxy(65, 18); printf("  ┗━━━━━┛");
	}
	if (dice2 == 3) {
		gotoxy(65, 12); printf("  ┏━━━━━┓");
		gotoxy(65, 13); printf("  ┃          ┃");
		gotoxy(65, 14); printf("  ┃    ●    ┃");
		gotoxy(65, 15); printf("  ┃          ┃");
		gotoxy(65, 16); printf("  ┃ ●    ● ┃");
		gotoxy(65, 17); printf("  ┃          ┃");
		gotoxy(65, 18); printf("  ┗━━━━━┛");
	}
	if (dice2 == 4) {
		gotoxy(65, 12); printf("  ┏━━━━━┓");
		gotoxy(65, 13); printf("  ┃          ┃");
		gotoxy(65, 14); printf("  ┃ ●    ● ┃");
		gotoxy(65, 15); printf("  ┃          ┃");
		gotoxy(65, 16); printf("  ┃ ●    ● ┃");
		gotoxy(65, 17); printf("  ┃          ┃");
		gotoxy(65, 18); printf("  ┗━━━━━┛");
	}
	if (dice2 == 5) {
		gotoxy(65, 12); printf("  ┏━━━━━┓");
		gotoxy(65, 13); printf("  ┃          ┃");
		gotoxy(65, 14); printf("  ┃ ●    ● ┃");
		gotoxy(65, 15); printf("  ┃    ●    ┃");
		gotoxy(65, 16); printf("  ┃ ●    ● ┃");
		gotoxy(65, 17); printf("  ┃          ┃");
		gotoxy(65, 18); printf("  ┗━━━━━┛");
	}
	if (dice2 == 6) {
		gotoxy(65, 12); printf("  ┏━━━━━┓");
		gotoxy(65, 13); printf("  ┃          ┃");
		gotoxy(65, 14); printf("  ┃ ●    ● ┃");
		gotoxy(65, 15); printf("  ┃ ●    ● ┃");
		gotoxy(65, 16); printf("  ┃ ●    ● ┃");
		gotoxy(65, 17); printf("  ┃          ┃");
		gotoxy(65, 18); printf("  ┗━━━━━┛");
	}
}

/*게임판 그려줌*/
void GameBoard() {

	//외부 테두리
	gotoxytext(17, 1, "┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓");
	for (int i = 2; i < 46; i++) {
		if (i % 5 == 1) {
			gotoxytext(17, i, "┣");
			gotoxytext(107, i, "┫");
		}
		else {
			gotoxytext(17, i, "┃");
			gotoxytext(107, i, "┃");
		}
	}
	gotoxytext(17, 46, "┗━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┛");

	//내부 테두리
	gotoxytext(27, 6, "╋━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━┻━━━━╋");
	for (int i = 7; i < 41; i++) {
		if (i % 5 == 1) {
			gotoxytext(27, i, "┫");
			gotoxytext(97, i, "┣");
		}
		else {
			gotoxytext(27, i, "┃");
			gotoxytext(97, i, "┃");
		}
	}
	gotoxytext(27, 41, "╋━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━┳━━━━╋");

	//윗쪽 세로선
	for (int i = 27; i < 107; i += 10) {
		for (int j = 2; j < 6; j++) {
			gotoxytext(i, j, "┃");
		}
	}

	//아랫쪽 세로선
	for (int i = 27; i < 107; i += 10) {
		for (int j = 42; j < 46; j++) {
			gotoxytext(i, j, "┃");
		}
	}

	//왼쪽 가로선
	for (int j = 6; j < 46; j += 5) {
		for (int i = 19; i < 26; i += 2) {
			gotoxytext(i, j, "━");
		}
	}

	//오른쪽 가로선
	for (int j = 6; j < 46; j += 5) {
		for (int i = 99; i < 106; i += 2) {
			gotoxytext(i, j, "━");
		}
	}


	//유나 - 게임판에 지역이름 출력, 색 지정
	int i = 0;

	//왼쪽 세로줄
	for (int j = 42; j > 5; j -= 5) {
		gotoxy(19, j); printf("%8s", localName[i]);
		if (i == 0 || i == 2) {
			settextcolor(0, 10);
		}
		else if (i == 1) {
			settextcolor(0x0007, 007700);
		}
		else if (i == 3) {
			settextcolor(0, 3);
		}
		else if (i == 4 || i == 5 || i == 6) {
			settextcolor(0, 2);
		}
		i++;
	}
	settextcolor(0x0007, 007700);
	//위쪽 가로줄
	for (int j = 19; j < 105; j += 10) {
		gotoxy(j, 2); printf("%8s", localName[i]);
		if (i == 8) {
			settextcolor(0, 3);
		}
		else if (i == 9 || i == 10) {
			settextcolor(0, 9);
		}
		else if (i == 11) {
			settextcolor(0x0007, 007700);
		}
		else if (i == 12 || i == 14) {
			settextcolor(0, 1);
		}
		else if (i == 13) {
			settextcolor(0, 3);
		}
		else if (i == 15) {
			settextcolor(0x0007, 007700);
		}
		else if (i == 16) {
			settextcolor(0, 13);
		}
		i++;
	}
	//오른쪽 세로줄
	for (int j = 7; j < 47; j += 5) {
		gotoxy(99, j); printf("%8s", localName[i]);
		if (i == 17) {
			settextcolor(0, 3);
		}
		else if (i == 18) {
			settextcolor(0, 13);
		}
		else if (i == 19) {
			settextcolor(0x0007, 007700);
		}
		else if (i == 20 || i == 21 || i == 22) {
			settextcolor(0, 5);
		}
		else if (i == 23) {
			settextcolor(0x0007, 007700);
		}
		i++;
	}
	settextcolor(0x0007, 007700);
	//아래쪽 가로줄
	for (int j = 89; j > 22; j -= 10) {
		if (i == 25) {
			settextcolor(0, 3);
		}
		else if (i == 26 || i == 27) {
			settextcolor(0, 12);
		}
		else if (i == 28) {
			settextcolor(0x0007, 007700);
		}
		else if (i == 29) {
			settextcolor(0, 4);
		}
		else if (i == 30) {
			settextcolor(0x0007, 007700);
		}
		else if (i == 31) {
			settextcolor(0, 4);
		}
		gotoxy(j, 42); printf("%8s", localName[i]);
		settextcolor(0x0007, 007700);
		i++;
	}

	//유나
	//텍스트 창
	gotoxytext(32, 24, "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓");
	for (int i = 25; i<35; i++) {
		gotoxytext(32, i, "┃");
		gotoxytext(92, i, "┃");
	}
	gotoxytext(32, 35, "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛");


}

/*플레이어정보판 그려줌*/
void DrawPlayer(int totalNumber) {

	gotoxytext(29, 7, "┏━━━━━━━━━━━━┓");
	gotoxytext(29, 8, "┃                        ┃");
	gotoxytext(29, 9, "┃                        ┃");
	gotoxytext(29, 10, "┃                        ┃");
	gotoxytext(29, 11, "┗━━━━━━━━━━━━┛");

	gotoxytext(31, 10, "보유마블: ");

	gotoxytext(69, 36, "┏━━━━━━━━━━━━┓");
	gotoxytext(69, 37, "┃                        ┃");
	gotoxytext(69, 38, "┃                        ┃");
	gotoxytext(69, 39, "┃                        ┃");
	gotoxytext(69, 40, "┗━━━━━━━━━━━━┛");

	gotoxytext(71, 39, "보유마블: ");

	if (totalNumber == 3 || totalNumber == 4) {
		gotoxytext(29, 36, "┏━━━━━━━━━━━━┓");
		gotoxytext(29, 37, "┃                        ┃");
		gotoxytext(29, 38, "┃                        ┃");
		gotoxytext(29, 39, "┃                        ┃");
		gotoxytext(29, 40, "┗━━━━━━━━━━━━┛");

		gotoxytext(31, 39, "보유마블: ");

		if (totalNumber == 4) {
			gotoxytext(69, 7, "┏━━━━━━━━━━━━┓");
			gotoxytext(69, 8, "┃                        ┃");
			gotoxytext(69, 9, "┃                        ┃");
			gotoxytext(69, 10, "┃                        ┃");
			gotoxytext(69, 11, "┗━━━━━━━━━━━━┛");

			gotoxytext(71, 10, "보유마블: ");
		}
	}
}

//유나
//게임 시작할때 로딩화면
void Loading() {

	system("mode con:cols=130 lines=48"); //콘솔창 크기
	gotoxy(25, 10); DARK_SKY_BLUE printf("┏━━━━━┓");
	gotoxy(25, 11); printf("┃ ┏━━┓ ┃");
	gotoxy(25, 12); printf("┃ ┃    ┃ ┃");
	gotoxy(25, 13); printf("┃ ┗━━┛ ┃");
	gotoxy(25, 14); printf("┗━┓  ┏━┛");
	gotoxy(25, 15); printf("    ┃  ┃  ");
	gotoxy(25, 16); printf("    ┃  ┃  ");
	gotoxy(25, 17); printf("┏━┛  ┗━┓");
	gotoxy(25, 18); printf("┃          ┃");
	gotoxy(25, 19); printf("┗━━━━━┛");

	gotoxy(39, 11); printf("┏━━━━━┓");
	gotoxy(39, 12); printf("┃  ┏━━━┛");
	gotoxy(39, 13); printf("┃  ┃      ");
	gotoxy(39, 14); printf("┃  ┗━━━┓");
	gotoxy(39, 15); printf("┗━━━━━┛");
	gotoxy(39, 16); printf("┏━━━━━┓");
	gotoxy(39, 17); printf("┃          ┃");
	gotoxy(39, 18); printf("┗━┓  ┏━┛");
	gotoxy(39, 19); printf("    ┃  ┃  ");
	gotoxy(39, 20); printf("    ┃  ┃  ");
	gotoxy(39, 21); printf("    ┗━┛");

	gotoxy(53, 12); printf("  ━━━  ┏┓");
	gotoxy(53, 13); printf("┃┏━┓┃┃┃");
	gotoxy(53, 14); printf("┃┗━┛┃┃┃");
	gotoxy(53, 15); printf("  ━━━  ┃┃");
	gotoxy(53, 16); printf("┏━━━┓┃┃");
	gotoxy(53, 17); printf("┗━━━┛┗┛");

	gotoxy(67, 10); printf("            ┏┓");
	gotoxy(67, 11); printf("┏━━━━┓┃┃");
	gotoxy(67, 12); printf("┃        ┃┃┃");
	gotoxy(67, 13); printf("┃┏━━┓┃┃┃");
	gotoxy(67, 14); printf("┃┃    ┃┃┃┗┓");
	gotoxy(67, 15); printf("┃┃    ┃┃┃┏┛");
	gotoxy(67, 16); printf("┃┃    ┃┃┃┃");
	gotoxy(67, 17); printf("┃┗━━┛┃┃┃");
	gotoxy(67, 18); printf("┃        ┃┃┃");
	gotoxy(67, 19); printf("┗━━━━┛┃┃");
	gotoxy(67, 20); printf("            ┗┛");

	gotoxy(85, 10); printf("┏━┓    ┏━┓");;
	gotoxy(85, 11); printf("┃  ┗━━┛  ┃");
	gotoxy(85, 12); printf("┃  ┏━━┓  ┃");
	gotoxy(85, 13); printf("┃  ┗━━┛  ┃");
	gotoxy(85, 14); printf("┗━━━━━━┛");
	gotoxy(85, 15); printf("┏━━━━━━┓");
	gotoxy(85, 16); printf("┗━━━━━━┛");
	gotoxy(85, 17); printf("┏━━━━━━┓");
	gotoxy(85, 18); printf("┗━━━━━┓┃");
	gotoxy(85, 19); printf("┏━━━━━┛┃");
	gotoxy(85, 20); printf("┃┏━━━━━┛");
	gotoxy(85, 21); printf("┃┗━━━━━┓");
	gotoxy(85, 22); printf("┗━━━━━━┛");;


	gotoxy(45, 30); printf("L");
	Sleep(200);
	gotoxy(50, 30); printf("O");
	Sleep(200);
	gotoxy(55, 30); printf("A");
	Sleep(200);
	gotoxy(60, 30); printf("D");
	Sleep(200);
	gotoxy(65, 30); printf("I");
	Sleep(200);
	gotoxy(70, 30); printf("N");
	Sleep(200);
	gotoxy(75, 30); printf("G");
	Sleep(200);
	gotoxy(45, 32); printf("▶");
	Sleep(200);
	gotoxy(50, 32); printf("▶");
	Sleep(200);
	gotoxy(55, 32); printf("▶");
	Sleep(200);
	gotoxy(60, 32); printf("▶");
	Sleep(200);
	gotoxy(65, 32); printf("▶");
	Sleep(200);
	gotoxy(70, 32); printf("▶");
	Sleep(200);
	gotoxy(75, 32); printf("▶");
	Sleep(200);
	GRAY

}

//유나
//게임 메뉴
void Menu() {

	clrText();

	settextcolor(0x0007, 000000);
	gotoxytext(50, 28, "☞");

	settextcolor(0, 3);
	gotoxytext(55, 28, "[1] 게임 시작");
	settextcolor(0x0007, 000000);
	gotoxytext(55, 30, "[2] 게임 설명");

}

//유나
//게임 설명 창
void Explain() {

	int select;
	gotoxy(20, 5); DARK_SKY_BLUE
		printf("┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━┳━━┳━━┓");
	for (int i = 6; i<42; i++) {
		gotoxytext(20, i, "┃");
		gotoxytext(106, i, "┃");
	}
	gotoxy(25, 7); printf("게임 시작은 Enter를 눌러주세요!");
	gotoxy(91, 7); printf("━"); gotoxy(96, 6); printf("┏┓"); gotoxy(96, 7); printf("┗┛"); gotoxy(103, 7); printf("Ⅹ");
	gotoxy(88, 6); printf("┃"); gotoxy(94, 6); printf("┃"); gotoxy(100, 6); printf("┃");
	gotoxy(88, 7); printf("┃"); gotoxy(94, 7); printf("┃"); gotoxy(100, 7); printf("┃");
	gotoxy(20, 8); printf("┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━┻━━┻━━┫");
	gotoxy(20, 42); printf("┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛");
	GRAY
		gotoxy(25, 11); printf("[1] 게임 시작하기를 선택하면 게임이 시작");
	gotoxy(25, 13); printf("[2] 플레이어는 2명으로 제한, 카드선택으로 순서를 결정");
	gotoxy(25, 15); printf("[3] 주사위를 굴려 나온 만큼 전진, 도착한 도시에 호텔 지을 수 있음");
	gotoxy(25, 16); printf("[4] 호텔을 지은 자신의 지역에 도착 시 랜드 마크 건설");
	gotoxy(27, 17); printf("  또는 출발지점으로 가면 자신의 지역 한 곳에 건물 건설 가능");
	gotoxy(25, 20); printf("[5] 다른 플레이어의 지역에 도착했을 시 통행료 지불과 지역 & 건물 인수 가능");
	gotoxy(27, 21); printf("   ☞ 단, 랜드 마크나 관광지는 인수 불가능");
	gotoxy(25, 23); printf("[6] 행운 카드에 도착 시, 나오는 카드 내용을 수행");
	gotoxy(25, 25); printf("[7] 세계여행에 도착 시, 비용을 지불하고 다음 턴에 원하는 지역으로 이동 가능");
	gotoxy(25, 26); printf("[8] 무인도에 도착 시, 주사위 더블이 나오거나, 돈을 지불해야 탈출 가능!");
	gotoxy(27, 27); printf("  탈출을 못했을 경우 상대방으로 턴이 넘어 감. 최대 3회!");
	gotoxy(25, 30); printf("[9] 올림픽에 도착 시, 자신의 땅 한곳의 통행료를 2배로 상승");
	gotoxy(25, 32); printf("[10] 승리 조건 : 라인독점, 트리플 독점, 관광지 독점, 상대방 파산");
	gotoxy(25, 34); printf("    ☞ 라인 독점 ─ 한 줄에 있는 지역을 모두 차지");
	gotoxy(25, 35); printf("    ☞ 트리플 독점 ─ 3가지 컬러의 모든 지역을 차지");
	gotoxy(25, 36); printf("    ☞ 관광지 독점 ─ 5개의 관광지를 모두 차지");
	gotoxy(25, 37); printf("    ☞ 파산 ─ 상대방의 보유마블 부족");

	if (select = _getch()) { //키를 누르면 게임시작
		system("cls");
		//StartGame();
	}

}

/*플레이어의 마블상태를 그려줌*/
void PlayerState() {
	gotoxy(42, 10); printf("             ");
	gotoxy(42, 10); printf("%d", player[0].marble);
	gotoxy(82, 39); printf("             ");
	gotoxy(82, 39); printf("%d", player[1].marble);

	//if (totalNumber == 3 || totalNumber == 4) {
	//	gotoxy(42, 39); printf("             ");
	//	gotoxy(42, 39); printf("%d", player[0].marble);

	//	if (totalNumber == 4) {
	//		gotoxy(82, 10); printf("             ");
	//		gotoxy(82, 10); printf("%d", player[0].marble);
	//	}
	//}
}

/*텍스트화면 지우기*/
void clrText() {
	for (int i = 25; i < 35; i++) {
		gotoxytext(34, i, "                                                         ");
	}
}

/*보유리스트 지우기*/
void clrList() {
	for (int i = 0; i < 40; i++) {
		gotoxytext(110, i, "                       ");
	}

}

/*카드 지우기*/
void clrCard() {

	for (int i = 16; i < 26; i++) {
		gotoxy(112, i); printf("                ");
	}

}

void clrDice()
{
	for (int i = 12; i < 20; i++) {
		gotoxytext(45, i, "                                             ");
	}
}

void SetDrawColor(int turn){
	if (turn == 0)
		PLAYER1
	else if (turn == 1)
		PLAYER2
	else if (turn == 2)
		PLAYER3
	else
		PLAYER4
}